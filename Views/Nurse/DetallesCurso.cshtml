@using NurseCourse.Models
@{
    Layout = "~/Views/Shared/_Layout.cshtml"; // Utiliza este layout si tienes uno, o define null para no usar ningún layout
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Inicio</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <style>
        body {
            background-color: #F5F5F5;
            background-size: cover;
            background-blend-mode: darken;
        }

        .animation:hover {
            transform: translateY(-3px);
            border-bottom: 3px solid;
            background-color: #dbdbdb;
            transition: transform 0.2s;
            using Microsoft.EntityFrameworkCore.Metadata.Internal;
        }

        .titlenurse {
            background-color: #D9D9D9;
            display: flex;
            padding: 10px;
            padding-left: 15px;
            width: 100%;
            flex-direction: row;
            align-items: center;
        }

        form {
            background-color: #F5F5F5;
            padding: 20px;
            width: 500px;
        }

        .imgsection {
            display: flex;
            justify-content: flex-end;
            margin-left: auto;
        }

        .subtitle {
            margin: 1%;
            padding: 1%;
            background-color: black;
            color: white;
            width: 400px;
            align-items: center;
            justify-items: center;
        }

        .container {
            flex-direction: column;
            display: flex;
        }

        .horizontal {
            margin: 1%;
            display: flex;
            flex-direction: row;
        }

        h5 {
            margin: 1%;
        }
    </style>
</head>
<body>
    <div class="titlenurse">
        <h1 class="">Detalle del curso</h1>
        <div class="imgsection"><img src="https://cdn.icon-icons.com/icons2/3005/PNG/512/modules_apps_icon_188198.png" alt="Curso" style="width: 100px; height: 100px;"></div>

    </div>
    <div class="horizontal">
        @if (@ViewData["Link1"] == null || @ViewData["Link2"] == null)
        {
            <p>No hay links</p>
        }
        else
        {
            <button type="button" class="btn btn-primary subtitle" onclick="window.location.href='@ViewData["Link1"]'">Diagnóstico</button>
            <button type="button" class="btn btn-primary subtitle" onclick="window.location.href='@ViewData["Link2"]'">Examen final</button>
        }
    </div>

    <
    <h5>Tabla de Usuarios</h5>
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Email</th>
                <th>Rol sistema</th>
                <th>Nuevo Rol</th>
                <th>Nota actual</th>
                <th>Actualizar nota</th>
                <th>Eliminar usuario</th>
                <th>Certificar</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Item2 == null)
            {
                <tr>
                    <td colspan="8">No hay usuarios registrados</td>
                </tr>
            }
            else
            {
                @foreach (var modulo in Model.Item2)
                {
                    var idnew = (int)(@ViewData["id"] ?? 0);
                    var idUser = @modulo.usuarioId;
                    var direction = "Diagnostico" + idUser;
                    var rutarol = "moduloDropdown" + idUser;

                    <tr class="animation">
                        <td>@modulo.nombre</td>
                        <td>@modulo.correoElectronico</td>
                        <td>
                            @if (@modulo.rolId == 1)
                            {
                                <p>Estudiante</p>
                            }
                            else
                            {
                                <p>Administrador</p>
                            }
                        </td>
                        <td>
                            <select id="@rutarol" class="form-control mb-3">
                                <option value="2">Administrador</option>
                                <option value="1">Estudiante</option>
                            </select>
                            <button type="button" class="btn btn-primary" onclick="actualizarRol(@idnew, @idUser)">Modificar Rol</button>
                        </td>
                        <td>
                            @if (@modulo.rolId == 1) // Verifica si el usuario es un estudiante
                            {
                                var IdScore = 0;
                                @foreach (var notas in modulo.notasExamenes)
                                {
                                    @if (@notas.examenId == idnew)
                                    {
                                        IdScore = (int)(@notas.calificacion);
                                    }
                                }
                                @IdScore
                            }
                        </td>
                        <td>
                            @if (@modulo.rolId == 1) // Verifica si el usuario es un estudiante
                            {
                                <div class="mb-3">
                                    <input type="number" class="form-control w-50 nota-input" id="@direction" name="@direction" required min="0" max="100">
                                </div>
                                <button type="button" class="btn btn-primary" onclick="actualizarNotas(@idnew, @idUser)">Actualizar</button>
                            }
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="eliminarUser(@idnew, @idUser)">Eliminar</button>
                        </td>
                        <td>
                            @if (@modulo.rolId == 1) // Verifica si el usuario es un estudiante
                            {
                                <a class="btn btn-primary certificar-btn"
                                   asp-controller="Nurse"
                                   asp-action="Certificar"
                                   asp-route-email="@modulo.correoElectronico"
                                   asp-route-courseId="@ViewBag.courseId"
                                   asp-route-userName="@modulo.nombre"
                                   onclick="ConfirmationMessage()"
                                   disabled>
                                    Certificar
                                </a>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <h5>Tabla de modulos</h5>
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Descripción</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Item1 == null)
            {
                <tr>
                    <td colspan="4">No hay cursos registrados</td>
                </tr>
            }
            else
            {
                @foreach (var modulo in Model.Item1)
                {
                    <tr class="animation">
                        <td>@modulo.nombre</td>
                        <td>@modulo.descripcion</td>
                    </tr>
                }
            }

        </tbody>
    </table>
    <script>
        var valor = sessionStorage.getItem('UserRole');
        console.log("UserRole:" + valor);
        if (valor == 1) {
            console.log("eres user, fuera de aqui");
            window.location.href = "http://localhost:5053/Student/Index";
        }
        function actualizarRol(holax, iduser) {

            console.log(iduser + "hola:" + holax);
            // Crear objeto de solicitud
            var xhr = new XMLHttpRequest();

            // Configurar la solicitud
            xhr.open("PUT", "http://localhost:5053/api/usuarios/update-role", true);
            xhr.setRequestHeader("Content-Type", "application/json");

            // Definir el cuerpo de la solicitud
            var body = JSON.stringify({
                "UsuarioId": iduser,
                "NuevoRolId": document.getElementById('moduloDropdown' + iduser).value
            });

            // Manejar la respuesta de la solicitud
            xhr.onload = function () {
                if (xhr.status === 200) {
                    console.log("Rol actualizadas exitosamente.");
                    window.location.href = "http://localhost:5053/Nurse/DetallesCurso/" + holax
                } else {
                    console.error("Error al actualizar las Rol. Código de estado: " + xhr.status + " " + holax);
                    window.location.href = "http://localhost:5053/Nurse/DetallesCurso/" + holax
                }
            };

            // Enviar la solicitud
            xhr.send(body);
        }

        function actualizarNotas(holax, iduser) {
            console.log(iduser + "hola:" + holax);
            // Crear objeto de solicitud
            var xhr = new XMLHttpRequest();

            // Configurar la solicitud
            xhr.open("POST", "http://localhost:5053/api/NotaExamenes", true);
            xhr.setRequestHeader("Content-Type", "application/json");

            // Definir el cuerpo de la solicitud
            var body = JSON.stringify({
                "UsuarioId": iduser,
                "ExamenId": holax,
                "Calificacion": document.getElementById('Diagnostico' + iduser).value
            });

            // Manejar la respuesta de la solicitud
            xhr.onload = function () {
                if (xhr.status === 200) {
                    console.log("Notas actualizadas exitosamente.");
                    window.location.href = "http://localhost:5053/Nurse/DetallesCurso/" + holax
                } else {
                    console.error("Error al actualizar las notas. Código de estado: " + xhr.status + " " + holax);
                    window.location.href = "http://localhost:5053/Nurse/DetallesCurso/" + holax
                }
            };

            // Enviar la solicitud
            xhr.send(body);
        }

        function eliminarUser(holax, iduser) {
            console.log(iduser + "hola:" + holax);
            // Crear objeto de solicitud
            var xhr = new XMLHttpRequest();

            // Configurar la solicitud
            xhr.open("DELETE", "http://localhost:5053/api/usuarios/" + iduser, true);
            xhr.setRequestHeader("Content-Type", "application/json");

            // Definir el cuerpo de la solicitud
            var body = JSON.stringify({
                "UsuarioId": iduser,
                "ExamenId": holax,
                "Calificacion": document.getElementById('Diagnostico' + iduser).value
            });

            // Manejar la respuesta de la solicitud
            xhr.onload = function () {
                if (xhr.status === 200) {
                    console.log("Eliminado exitosamente.");
                    window.location.href = "http://localhost:5053/Nurse/DetallesCurso/" + holax
                } else {
                    console.error("Eliminar las notas. Código de estado: " + xhr.status + " " + holax);
                    window.location.href = "http://localhost:5053/Nurse/DetallesCurso/" + holax
                }
            };

            // Enviar la solicitud
            xhr.send(body);
        }


        //
        // Validación de la entrada de notas
        var notaInputs = document.querySelectorAll('.nota-input');
        notaInputs.forEach(input => {
            input.addEventListener('input', function () {
                // Limita la entrada a números entre 0 y 100
                var valor = parseInt(this.value);
                if (isNaN(valor) || valor < 0 || valor > 100) {
                    this.value = ''; // Limpiar el campo si el valor es inválido
                }
            });
        });

        // Habilitar o deshabilitar el botón de certificación según la calificación
        var certificarBtns = document.querySelectorAll('.certificar-btn');
        certificarBtns.forEach(btn => {
            if (parseInt(btn.dataset.calificacion) >= 51) {
                btn.removeAttribute('disabled'); // Habilita el botón si la calificación es mayor o igual a 51
            }
        });

        function ConfirmationMessage() {
            alert("El certificado ha sido enviado al correo del estudiante.");
        }
    </script>
</body>
</html>